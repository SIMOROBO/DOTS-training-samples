#ifndef SIMULATION_INCLUDED
#define SIMULATION_INCLUDED

#include "CommonParticleComputeShader.compute"

// SimOutput SimulationMetaballs(float3 pos)
// {
//     //
//     SimOutput simOutput;
//
//     [unroll(5)]
//     for (int i = 0; i < 5; i++)
//     {
//         float orbitRadius = i * 0.5f + 2f;
//         float angle1 = time * 4f * (1f + i * 0.1f);
//         float angle2 = time * 4f * (1.2f + i * 0.117f);
//         float angle3 = time * 4f * (1.3f + i * 0.1618f);
//         float cx = cos(angle1) * orbitRadius;
//         float cy = sin(angle2) * orbitRadius;
//         float cz = sin(angle3) * orbitRadius;
//
//         float newDist = SmoothMin(distance, Sphere(pos.x - cx, pos.y - cy, pos.z - cz, 2f), 2f);
//         simOutput.normal = newDist < dist ? float3(pos.x - cx, pos.y - cy, pos.z - cz) : normal;
//         simOutput.dist = min(newDist, dist);
//     }
//
//     return simOutput;
// }

#endif
