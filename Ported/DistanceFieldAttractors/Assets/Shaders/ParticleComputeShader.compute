#pragma kernel CSInitialize
#pragma kernel CSFixedUpdate0
#pragma kernel CSUpdate
#pragma enable_d3d11_debug_symbols

#include "CommonParticleComputeShader.compute"
#include "ParticleSimulation_0.compute"

[numthreads(Kernel_X, Kernel_Y, Kernel_Z)]
void CSInitialize (
    uint3 groupId : SV_GroupID,
    uint3 groupThreadId : SV_GroupThreadID,
    uint3 dispatchThreadId : SV_DispatchThreadID,
    uint groupIndex : SV_GroupIndex)
{
    uint index = GetParticleIndex(groupId, groupIndex);
    float3 pos = rand_dir(float2(index, gTime)) * rand_float(float2(index, gTime + 1.0f)) * 100.0f;
    float3 color = FixedUpdateBuffer[index].color;

    TransformsBuffer[index] =
    float4x4(
    float4(1, 0, 0, pos.x),
    float4(0, 1, 0, pos.y),
    float4(0, 0, 1, pos.z),
    float4(0, 0, 0, 1)
    );

    FixedUpdateData data;
    data.position = pos;
    data.color = float3(1, 1, 1);
    data.velocity = float3(0, 0, 0);
    FixedUpdateBuffer[index] = data;
}

[numthreads(Kernel_X, Kernel_Y, Kernel_Z)]
void CSFixedUpdate0 (
    uint3 groupId : SV_GroupID,
    uint3 groupThreadId : SV_GroupThreadID,
    uint groupIndex : SV_GroupIndex)
{
    uint index = GetParticleIndex(groupId, groupIndex);

    SimOutput simOutput = RunSim0(index);
    FixedUpdateBuffer[index] = ComputeParticleData(index, simOutput.normal, simOutput.dist);
}

[numthreads(Kernel_X, Kernel_Y, Kernel_Z)]
void CSUpdate (
    uint3 groupId : SV_GroupID,
    uint3 groupThreadId : SV_GroupThreadID,
    uint groupIndex : SV_GroupIndex)
{
    uint index = GetParticleIndex(groupId, groupIndex);
    FixedUpdateData data = FixedUpdateBuffer[index];
    float3 color = data.color;
    float3 pos = data.position;

    float scale = float3(0.1f, 0.01f, max(0.1f, length(data.velocity) * gSpeedStretch));
    float4x4 rot = LookAtMatrix(normalize(data.velocity));

    float4x4 matrix = float4x4.TRS(particleData.Position, q, scale);


    TransformsBuffer[index] =
        float4x4(
            float4(1, 0, 0, pos.x),
            float4(0, 1, 0, pos.y),
            float4(0, 0, 1, pos.z),
            float4(data.color, 1)
        );
}
